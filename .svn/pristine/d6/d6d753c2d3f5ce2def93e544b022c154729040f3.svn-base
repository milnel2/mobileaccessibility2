<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_18) on Thu Aug 19 15:53:42 PDT 2010 -->
<TITLE>
Timer
</TITLE>

<META NAME="date" CONTENT="2010-08-19">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../stylesheet.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="Timer";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../unimplemented_java_classes/timer/package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/Timer.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;PREV CLASS&nbsp;
&nbsp;NEXT CLASS</FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../index.html?unimplemented_java_classes/timer/Timer.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="Timer.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
unimplemented_java_classes.timer</FONT>
<BR>
Class Timer</H2>
<PRE>
<A HREF="file:/C:/Program Files/android-sdk_r06-windows/docs/reference/java/lang/Object.html?is-external=true" title="class or interface in java.lang">java.lang.Object</A>
  <IMG SRC="../../resources/inherit.gif" ALT="extended by "><B>unimplemented_java_classes.timer.Timer</B>
</PRE>
<HR>
<DL>
<DT><PRE>public class <B>Timer</B><DT>extends <A HREF="file:/C:/Program Files/android-sdk_r06-windows/docs/reference/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></DL>
</PRE>

<P>
<h1>Class Overview</h1>
 <p></br></br>This class was designed as a replacement for the javax.swing.Timer, which is not available on the Android platform. It provides most of the functionality provided by the javax.swing.Timer.</br></br></p>
<P>

<P>
<DL>
<DT><B>Author:</B></DT>
  <DD>Nicole Torcolini</DD>
</DL>
<HR>

<P>
<!-- =========== FIELD SUMMARY =========== -->

<A NAME="field_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Field Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;<A HREF="file:/C:/Program Files/android-sdk_r06-windows/docs/reference/java/util/LinkedList.html?is-external=true" title="class or interface in java.util">LinkedList</A>&lt;<A HREF="file:/C:/Documents%20and%20Settings/Nicole/My%20Files/workspace/mobileaccessibility/Talking%20Tap%20Twice/doc/unimplemented_java_classes/timer/TimerListener.html?is-external=true" title="class or interface in unimplemented_java_classes.timer">TimerListener</A>&gt;</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../unimplemented_java_classes/timer/Timer.html#listenerList">listenerList</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
</TABLE>
&nbsp;
<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../unimplemented_java_classes/timer/Timer.html#Timer(int, unimplemented_java_classes.timer.TimerListener, boolean)">Timer</A></B>(int&nbsp;delay,
      <A HREF="file:/C:/Documents%20and%20Settings/Nicole/My%20Files/workspace/mobileaccessibility/Talking%20Tap%20Twice/doc/unimplemented_java_classes/timer/TimerListener.html?is-external=true" title="class or interface in unimplemented_java_classes.timer">TimerListener</A>&nbsp;listener,
      boolean&nbsp;sameThread)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Creates a Timer that will notify its listeners every delay milliseconds.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../unimplemented_java_classes/timer/Timer.html#addListener(unimplemented_java_classes.timer.TimerListener)">addListener</A></B>(<A HREF="file:/C:/Documents%20and%20Settings/Nicole/My%20Files/workspace/mobileaccessibility/Talking%20Tap%20Twice/doc/unimplemented_java_classes/timer/TimerListener.html?is-external=true" title="class or interface in unimplemented_java_classes.timer">TimerListener</A>&nbsp;listener)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adds an action listener to the Timer.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../unimplemented_java_classes/timer/Timer.html#fireActionPerformed()">fireActionPerformed</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Notifies all listeners that have registered interest for notification on this event type.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../unimplemented_java_classes/timer/Timer.html#getDelay()">getDelay</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the delay, in milliseconds, between firings of action events.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;int</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../unimplemented_java_classes/timer/Timer.html#getInitialDelay()">getInitialDelay</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the Timer's initial delay.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="file:/C:/Documents%20and%20Settings/Nicole/My%20Files/workspace/mobileaccessibility/Talking%20Tap%20Twice/doc/unimplemented_java_classes/timer/TimerListener.html?is-external=true" title="class or interface in unimplemented_java_classes.timer">TimerListener</A>[]</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../unimplemented_java_classes/timer/Timer.html#getListeners()">getListeners</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns an array of all the action listeners registered on this timer.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../unimplemented_java_classes/timer/Timer.html#isRepeats()">isRepeats</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns true (the default) if the Timer will send an action event to its listeners multiple times.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../unimplemented_java_classes/timer/Timer.html#isRunning()">isRunning</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns true if the Timer is running.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../unimplemented_java_classes/timer/Timer.html#removeListener(unimplemented_java_classes.timer.TimerListener)">removeListener</A></B>(<A HREF="file:/C:/Documents%20and%20Settings/Nicole/My%20Files/workspace/mobileaccessibility/Talking%20Tap%20Twice/doc/unimplemented_java_classes/timer/TimerListener.html?is-external=true" title="class or interface in unimplemented_java_classes.timer">TimerListener</A>&nbsp;listener)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Removes the specified action listener from the Timer.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../unimplemented_java_classes/timer/Timer.html#restart()">restart</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Restarts the Timer, canceling any pending firings and causing it to fire with its initial delay.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../unimplemented_java_classes/timer/Timer.html#setDelay(int)">setDelay</A></B>(int&nbsp;delay)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the Timer's delay, the number of milliseconds between successive action events.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../unimplemented_java_classes/timer/Timer.html#setInitialDelay(int)">setInitialDelay</A></B>(int&nbsp;initialDelay)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the Timer's initial delay, which by default is the same as the between-event delay.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../unimplemented_java_classes/timer/Timer.html#setRepeats(boolean)">setRepeats</A></B>(boolean&nbsp;flag)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;If flag is false, instructs the Timer to send only one action event to its listeners.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../unimplemented_java_classes/timer/Timer.html#start()">start</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Starts the Timer, causing it to start sending action events to its listeners.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../unimplemented_java_classes/timer/Timer.html#stop()">stop</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Stops the Timer, causing it to stop sending action events to its listeners.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.lang.<A HREF="file:/C:/Program Files/android-sdk_r06-windows/docs/reference/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="file:/C:/Program Files/android-sdk_r06-windows/docs/reference/java/lang/Object.html?is-external=true#clone()" title="class or interface in java.lang">clone</A>, <A HREF="file:/C:/Program Files/android-sdk_r06-windows/docs/reference/java/lang/Object.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang">equals</A>, <A HREF="file:/C:/Program Files/android-sdk_r06-windows/docs/reference/java/lang/Object.html?is-external=true#finalize()" title="class or interface in java.lang">finalize</A>, <A HREF="file:/C:/Program Files/android-sdk_r06-windows/docs/reference/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang">getClass</A>, <A HREF="file:/C:/Program Files/android-sdk_r06-windows/docs/reference/java/lang/Object.html?is-external=true#hashCode()" title="class or interface in java.lang">hashCode</A>, <A HREF="file:/C:/Program Files/android-sdk_r06-windows/docs/reference/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang">notify</A>, <A HREF="file:/C:/Program Files/android-sdk_r06-windows/docs/reference/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang">notifyAll</A>, <A HREF="file:/C:/Program Files/android-sdk_r06-windows/docs/reference/java/lang/Object.html?is-external=true#toString()" title="class or interface in java.lang">toString</A>, <A HREF="file:/C:/Program Files/android-sdk_r06-windows/docs/reference/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang">wait</A>, <A HREF="file:/C:/Program Files/android-sdk_r06-windows/docs/reference/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang">wait</A>, <A HREF="file:/C:/Program Files/android-sdk_r06-windows/docs/reference/java/lang/Object.html?is-external=true#wait(long, int)" title="class or interface in java.lang">wait</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ FIELD DETAIL =========== -->

<A NAME="field_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Field Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="listenerList"><!-- --></A><H3>
listenerList</H3>
<PRE>
protected <A HREF="file:/C:/Program Files/android-sdk_r06-windows/docs/reference/java/util/LinkedList.html?is-external=true" title="class or interface in java.util">LinkedList</A>&lt;<A HREF="file:/C:/Documents%20and%20Settings/Nicole/My%20Files/workspace/mobileaccessibility/Talking%20Tap%20Twice/doc/unimplemented_java_classes/timer/TimerListener.html?is-external=true" title="class or interface in unimplemented_java_classes.timer">TimerListener</A>&gt; <B>listenerList</B></PRE>
<DL>
<DL>
</DL>
</DL>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="Timer(int, unimplemented_java_classes.timer.TimerListener, boolean)"><!-- --></A><H3>
Timer</H3>
<PRE>
public <B>Timer</B>(int&nbsp;delay,
             <A HREF="file:/C:/Documents%20and%20Settings/Nicole/My%20Files/workspace/mobileaccessibility/Talking%20Tap%20Twice/doc/unimplemented_java_classes/timer/TimerListener.html?is-external=true" title="class or interface in unimplemented_java_classes.timer">TimerListener</A>&nbsp;listener,
             boolean&nbsp;sameThread)</PRE>
<DL>
<DD>Creates a Timer that will notify its listeners every delay milliseconds.
 
 If delay is less than or equal to zero the timer will fire as soon as it is started. If listener is not null, it's registered as an action listener on the timer. If sameThread is set to true, the Timer will use the main Thread to count and call fireAction. This is necessary if the actionPerformed method of the TimerListener includes modifying a View. However, the only way to stop the Timer when running this way is for the class owning the TimerListener to have a reference to the Timer which the TimerListener can access to call stop during the actionPerformed method. If a View is not modified, it is preferable to set sameThread to false, so that the Timer will use a separate Thread to count, call fireAction, and start the next count. This allows the Timer to be stopped at any time.
<P>
<DL>
<DT><B>Parameters:</B><DD><CODE>delay</CODE> - the number of milliseconds between action events<DD><CODE>listener</CODE> - an initial listener; can be null<DD><CODE>sameThreads</CODE> - Specifies if the Timer uses the main Thread to count and call fireAction.</DL>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="addListener(unimplemented_java_classes.timer.TimerListener)"><!-- --></A><H3>
addListener</H3>
<PRE>
public void <B>addListener</B>(<A HREF="file:/C:/Documents%20and%20Settings/Nicole/My%20Files/workspace/mobileaccessibility/Talking%20Tap%20Twice/doc/unimplemented_java_classes/timer/TimerListener.html?is-external=true" title="class or interface in unimplemented_java_classes.timer">TimerListener</A>&nbsp;listener)</PRE>
<DL>
<DD>Adds an action listener to the Timer.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>listener</CODE> - the listener to add</DL>
</DD>
</DL>
<HR>

<A NAME="fireActionPerformed()"><!-- --></A><H3>
fireActionPerformed</H3>
<PRE>
protected void <B>fireActionPerformed</B>()</PRE>
<DL>
<DD>Notifies all listeners that have registered interest for notification on this event type.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="isRunning()"><!-- --></A><H3>
isRunning</H3>
<PRE>
public boolean <B>isRunning</B>()</PRE>
<DL>
<DD>Returns true if the Timer is running.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="removeListener(unimplemented_java_classes.timer.TimerListener)"><!-- --></A><H3>
removeListener</H3>
<PRE>
public void <B>removeListener</B>(<A HREF="file:/C:/Documents%20and%20Settings/Nicole/My%20Files/workspace/mobileaccessibility/Talking%20Tap%20Twice/doc/unimplemented_java_classes/timer/TimerListener.html?is-external=true" title="class or interface in unimplemented_java_classes.timer">TimerListener</A>&nbsp;listener)</PRE>
<DL>
<DD>Removes the specified action listener from the Timer.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>listener</CODE> - the listener to remove</DL>
</DD>
</DL>
<HR>

<A NAME="restart()"><!-- --></A><H3>
restart</H3>
<PRE>
public void <B>restart</B>()</PRE>
<DL>
<DD>Restarts the Timer, canceling any pending firings and causing it to fire with its initial delay.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="start()"><!-- --></A><H3>
start</H3>
<PRE>
public void <B>start</B>()</PRE>
<DL>
<DD>Starts the Timer, causing it to start sending action events to its listeners.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="stop()"><!-- --></A><H3>
stop</H3>
<PRE>
public void <B>stop</B>()</PRE>
<DL>
<DD>Stops the Timer, causing it to stop sending action events to its listeners.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getDelay()"><!-- --></A><H3>
getDelay</H3>
<PRE>
public int <B>getDelay</B>()</PRE>
<DL>
<DD>Returns the delay, in milliseconds, between firings of action events.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setDelay(int)"><!-- --></A><H3>
setDelay</H3>
<PRE>
public void <B>setDelay</B>(int&nbsp;delay)</PRE>
<DL>
<DD>Sets the Timer's delay, the number of milliseconds between successive action events.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>delay</CODE> - the delay in milliseconds</DL>
</DD>
</DL>
<HR>

<A NAME="getInitialDelay()"><!-- --></A><H3>
getInitialDelay</H3>
<PRE>
public int <B>getInitialDelay</B>()</PRE>
<DL>
<DD>Returns the Timer's initial delay.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setInitialDelay(int)"><!-- --></A><H3>
setInitialDelay</H3>
<PRE>
public void <B>setInitialDelay</B>(int&nbsp;initialDelay)</PRE>
<DL>
<DD>Sets the Timer's initial delay, which by default is the same as the between-event delay.
 This is used only for the first action event. Subsequent action events are spaced using the delay property.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>initialDelay</CODE> - the delay, in milliseconds, between the invocation of the start method and the first action event fired by this timer</DL>
</DD>
</DL>
<HR>

<A NAME="isRepeats()"><!-- --></A><H3>
isRepeats</H3>
<PRE>
public boolean <B>isRepeats</B>()</PRE>
<DL>
<DD>Returns true (the default) if the Timer will send an action event to its listeners multiple times.
<P>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setRepeats(boolean)"><!-- --></A><H3>
setRepeats</H3>
<PRE>
public void <B>setRepeats</B>(boolean&nbsp;flag)</PRE>
<DL>
<DD>If flag is false, instructs the Timer to send only one action event to its listeners.
<P>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>flag</CODE> - specify false to make the timer stop after sending its first action event</DL>
</DD>
</DL>
<HR>

<A NAME="getListeners()"><!-- --></A><H3>
getListeners</H3>
<PRE>
public <A HREF="file:/C:/Documents%20and%20Settings/Nicole/My%20Files/workspace/mobileaccessibility/Talking%20Tap%20Twice/doc/unimplemented_java_classes/timer/TimerListener.html?is-external=true" title="class or interface in unimplemented_java_classes.timer">TimerListener</A>[] <B>getListeners</B>()</PRE>
<DL>
<DD>Returns an array of all the action listeners registered on this timer.
<P>
<DD><DL>

<DT><B>Returns:</B><DD>all of the timer's Listeners or an empty array if no listeners are currently registered</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../unimplemented_java_classes/timer/package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/Timer.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;PREV CLASS&nbsp;
&nbsp;NEXT CLASS</FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../index.html?unimplemented_java_classes/timer/Timer.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="Timer.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>
