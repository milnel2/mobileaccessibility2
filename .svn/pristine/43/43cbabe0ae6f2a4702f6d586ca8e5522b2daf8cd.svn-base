<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--NewPage-->
<HTML>
<HEAD>
<!-- Generated by javadoc (build 1.6.0_18) on Thu Aug 19 14:53:26 PDT 2010 -->
<TITLE>
TTT
</TITLE>

<META NAME="date" CONTENT="2010-08-19">

<LINK REL ="stylesheet" TYPE="text/css" HREF="../../../stylesheet.css" TITLE="Style">

<SCRIPT type="text/javascript">
function windowTitle()
{
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="TTT";
    }
}
</SCRIPT>
<NOSCRIPT>
</NOSCRIPT>

</HEAD>

<BODY BGCOLOR="white" onload="windowTitle();">
<HR>


<!-- ========= START OF TOP NAVBAR ======= -->
<A NAME="navbar_top"><!-- --></A>
<A HREF="#skip-navbar_top" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_top_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/TTT.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../android_talking_software/development/talking_tap_twice/R.styleable.html" title="class in android_talking_software.development.talking_tap_twice"><B>PREV CLASS</B></A>&nbsp;
&nbsp;NEXT CLASS</FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../index.html?android_talking_software/development/talking_tap_twice/TTT.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="TTT.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_top"></A>
<!-- ========= END OF TOP NAVBAR ========= -->

<HR>
<!-- ======== START OF CLASS DATA ======== -->
<H2>
<FONT SIZE="-1">
android_talking_software.development.talking_tap_twice</FONT>
<BR>
Class TTT</H2>
<PRE>
<A HREF="file:/C:/Program Files/android-sdk_r06-windows/docs/reference/java/lang/Object.html?is-external=true" title="class or interface in java.lang">java.lang.Object</A>
  <IMG SRC="../../../resources/inherit.gif" ALT="extended by ">Activity
      <IMG SRC="../../../resources/inherit.gif" ALT="extended by "><B>android_talking_software.development.talking_tap_twice.TTT</B>
</PRE>
<DL>
<DT><B>All Implemented Interfaces:</B> <DD><A HREF="../../../android_talking_software/development/talking_tap_twice/Event/TouchListener.html" title="interface in android_talking_software.development.talking_tap_twice.Event">TouchListener</A></DD>
</DL>
<HR>
<DL>
<DT><PRE>public abstract class <B>TTT</B><DT>extends Activity<DT>implements <A HREF="../../../android_talking_software/development/talking_tap_twice/Event/TouchListener.html" title="interface in android_talking_software.development.talking_tap_twice.Event">TouchListener</A></DL>
</PRE>

<P>
<h1>Class Overview</h1>
 <p></br></br>This class allows programmers to add self voicing functionality to their applications while also defining an accessible input method that allows the user to examine the contents of the screen without activation.</p>
 <h2>Input Method</h2>
 <p></br></br>The input method defined by the TTT class allows the user to examine the contents of the screen without activation. Tapping any of the controls on the screen causes the label of the control to be spoken. Tapping twice anywhere on the screen will cause the last selected control to be activated.</p>
<h2>General Structure</h2>
<p></br></br>The TTT class works by using the attributes specified in the various layout XML files to associate each control with a method to be invoked when that control is selected, a phrase to be spoken when that control is selected, and a phrase to be spoken when that control is tapped. The TTT class also allows the programmer to specify a TextView as the main display of the application, for which there are methods that allow the subclass to call tap, select, read, and spell; these methods can be overridden if the programmer desires other actions. 
The TTT class also allows the programmer to control how the TextToSpeech engine pronounces symbols, words, and abbreviations by associating the correct spelling with a spelling that the programmer knows that the TextToSpeech engine will pronounce in the desired way; for example, + and plus.</br></br></p>
<h2>Designing Subclasses</h2>
<p></br></br>Subclasses of the TTT class must contain certain elements, as defined below.</p>
<h3>Invoking Methods</h3>
<p></br></br>In order to invoke the methods associated with the various controls of the subclass, the invokeFrom Object of the TTT class must point to the running instance of the subclass. Programmers need to initialize invokeFrom somewhere in the code that is executed when the application starts, before the application receives input from the controls. Using newInstance to create an instance of the subclass does not work.</p>
<h3>Required Strings</h3>
<p></br></br>Strings with the following names that serve the following functions can be passed to the TTT. To do this, replace an android.widget.LinearLayout in a layout file with an android_talking_software.development.talking_tap_twice.accessible_view_extensions.LinearLayoutTTT and specify the different attributes.
<list>
<li>pronounciation_dictionary_entries: This string contains any text which the programmer wishes to have spoken in a way other than how the TextToSpeech engine would normally render it. Entries and elements of entries are separated by ~. For example, to have "+" spoken as "plus" and "/" spoken as divided by, this string would contain "+~plus~/~divided by".</li>
<li>default_selected: This string contains an optional phrase to always be spoken proceeding the phrase for the selected item, such as "entered", "pressed", or selected".</li>
<li>default_method: This string contains an optional method name that is invoked when controls are selected. It is useful if multiple controls invoke the same method. However, having all controls invoke the same method and then delegating the decision of what to do to the subclass is discouraged as having many controls can lead to complex, time consuming conditionals. This decision making should be left to the TTT class.</li>
</list>
</p>
<h3>Layout Files</h3>
<p></br></br>All layout files must contain a TextView with the android:id of "title". This is used as a reference point to gain access to the rest of the View hierarchy.</p>
<p>Layout files may contain an optional TextView with the android:id of "display". This TextView will be read when tapped, and its contents will be spelled when selected. These behaviors are also available to the subclass and can be changed by overriding the associated methods, but these behaviors will not be changed for the subclass by setting attributes for this TextView,.</p>
<p>All controls should be those defined in the android_talking_software.accessible_view_extensions package and should have the method, tapped, when_selected, and label attributes set as appropriate as described in the android_talking_software.development.talking_tap_twice.accessible_view_extensions.AccessibleViewExtension interface and its implementing classes.</p>
<p>All layout files should contain a namespace definition that points to the local resources and that prefixes all AccessibleViewExtension attributes.</p>
<h3>Required Files</h3>
<p></br></br>The following required files are available from <a href="http://mobileaccessibility.googlecode.com/svn/trunk/Talking%20Tap%20Twice/res/">http://mobileaccessibility.googlecode.com/svn/trunk/Talking%20Tap%20Twice/res/</a></br></br>
<list>
<li>raw/click.mp3</li>
<li>values/attrs.xml</li>
</list>
</p>
<h3>Overriding Methods</h3>
<p></br></br>The spell, speak, and expandTextViewContents methods should not be overridden.</br>
Unless a desired functionality is not achieveable, overriding of the process methods is discouraged</br>
The tappedDisplay and selectDisplay methods may be overridden if a different behavior for the display is desired.</br></br></p>
<h3>Linking Resources</h3>
<p>The res folder of the subclass should be deleted. The subclass should reference the res folder of the TTT folder and the source code of the TTT.</br></br></p>
<P>

<P>
<DL>
<DT><B>Author:</B></DT>
  <DD>Nicole Torcolini</br></br></DD>
</DL>
<HR>

<P>
<!-- =========== FIELD SUMMARY =========== -->

<A NAME="field_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Field Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;<A HREF="../../../android_talking_software/development/talking_tap_twice/accessible_view_extensions/TextViewTTT.html" title="class in android_talking_software.development.talking_tap_twice.accessible_view_extensions">TextViewTTT</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../android_talking_software/development/talking_tap_twice/TTT.html#display">display</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</br>Treated as the optional main display of the application.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;<A HREF="file:/C:/Program Files/android-sdk_r06-windows/docs/reference/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../android_talking_software/development/talking_tap_twice/TTT.html#invokeFrom">invokeFrom</A></B></CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</br>Acts as the target for invoking methods.</TD>
</TR>
</TABLE>
&nbsp;
<!-- ======== CONSTRUCTOR SUMMARY ======== -->

<A NAME="constructor_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Constructor Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><B><A HREF="../../../android_talking_software/development/talking_tap_twice/TTT.html#TTT()">TTT</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
</TABLE>
&nbsp;
<!-- ========== METHOD SUMMARY =========== -->

<A NAME="method_summary"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="2"><FONT SIZE="+2">
<B>Method Summary</B></FONT></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../android_talking_software/development/talking_tap_twice/TTT.html#addPronounciationDictionaryEntry(java.lang.String, java.lang.String)">addPronounciationDictionaryEntry</A></B>(<A HREF="file:/C:/Program Files/android-sdk_r06-windows/docs/reference/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;phrase,
                                 <A HREF="file:/C:/Program Files/android-sdk_r06-windows/docs/reference/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;pronounciation)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Adds an entry to the pronounciation dictionary
 
 If the pronounciation dictionary already contains a pronounciation for the phrase, the current value is overridden without warning or confirmation.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="file:/C:/Program Files/android-sdk_r06-windows/docs/reference/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../android_talking_software/development/talking_tap_twice/TTT.html#convert(java.lang.CharSequence)">convert</A></B>(<A HREF="file:/C:/Program Files/android-sdk_r06-windows/docs/reference/java/lang/CharSequence.html?is-external=true" title="class or interface in java.lang">CharSequence</A>&nbsp;text)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Performs any replacements in a phrase so that a TextToSpeech object will speak it as desired.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="file:/C:/Program Files/android-sdk_r06-windows/docs/reference/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../android_talking_software/development/talking_tap_twice/TTT.html#expandTextViewContents(java.lang.CharSequence)">expandTextViewContents</A></B>(<A HREF="file:/C:/Program Files/android-sdk_r06-windows/docs/reference/java/lang/CharSequence.html?is-external=true" title="class or interface in java.lang">CharSequence</A>&nbsp;text)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns a String of text that a TextToSpeech will read out letter by letter.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;<A HREF="file:/C:/Program Files/android-sdk_r06-windows/docs/reference/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../android_talking_software/development/talking_tap_twice/TTT.html#getDefaultMethod()">getDefaultMethod</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the name of the default method to be invoked when a control is selected.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;<A HREF="file:/C:/Program Files/android-sdk_r06-windows/docs/reference/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../android_talking_software/development/talking_tap_twice/TTT.html#getDefaultSelected()">getDefaultSelected</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the default phrase to be spoken when a control is selected.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;<A HREF="file:/C:/Program Files/android-sdk_r06-windows/docs/reference/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../android_talking_software/development/talking_tap_twice/TTT.html#getPronounciationForPhrase(java.lang.String)">getPronounciationForPhrase</A></B>(<A HREF="file:/C:/Program Files/android-sdk_r06-windows/docs/reference/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;phrase)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the pronounciation that is stored in the pronounciation dectionary for the given phrase.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;<A HREF="../../../android_talking_software/development/talking_tap_twice/accessible_view_extensions/AccessibleViewExtension.html" title="interface in android_talking_software.development.talking_tap_twice.accessible_view_extensions">AccessibleViewExtension</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../android_talking_software/development/talking_tap_twice/TTT.html#getSelected()">getSelected</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns the currently selected View</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../android_talking_software/development/talking_tap_twice/TTT.html#hasPhraseInPronounciationDictionary(java.lang.String)">hasPhraseInPronounciationDictionary</A></B>(<A HREF="file:/C:/Program Files/android-sdk_r06-windows/docs/reference/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;phrase)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns a boolean indicating whether or not the given phrase is in the pronounciation dictiionary.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../android_talking_software/development/talking_tap_twice/TTT.html#isSearching()">isSearching</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Indicates if the user is still searching for the correct control based on the time interval sense the last touch.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;boolean</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../android_talking_software/development/talking_tap_twice/TTT.html#isUsingMathematicalPronounciations()">isUsingMathematicalPronounciations</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Returns a boolean indicating whether or not the TextToSpeech engine speaks the names of mathematical symbols that are normally punctuation marks.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../android_talking_software/development/talking_tap_twice/TTT.html#onCreate(Bundle)">onCreate</A></B>(Bundle&nbsp;savedInstanceState)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../android_talking_software/development/talking_tap_twice/TTT.html#onDestroy()">onDestroy</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;This method is overridden to allow the addition of a spoken "Good-bye" message as well as the destruction of the TextToSpeech engine.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../android_talking_software/development/talking_tap_twice/TTT.html#processEntry()">processEntry</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Notifies the TouchListener that an AccessibleViewExtension has been double tapped and that the TouchListener is to invoke the performSelection method of the AccessibleViewExtension that it has stored as selected.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../android_talking_software/development/talking_tap_twice/TTT.html#processSelection(android_talking_software.development.talking_tap_twice.Event.TouchEvent)">processSelection</A></B>(<A HREF="../../../android_talking_software/development/talking_tap_twice/Event/TouchEvent.html" title="class in android_talking_software.development.talking_tap_twice.Event">TouchEvent</A>&nbsp;e)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Notifies the TouchListener that an AccessibleViewExtension has had its performSelection method invoked.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../android_talking_software/development/talking_tap_twice/TTT.html#processTap(android_talking_software.development.talking_tap_twice.Event.TouchEvent)">processTap</A></B>(<A HREF="../../../android_talking_software/development/talking_tap_twice/Event/TouchEvent.html" title="class in android_talking_software.development.talking_tap_twice.Event">TouchEvent</A>&nbsp;e)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Notifies the TouchListener that an AccessibleViewExtension has been tapped.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../android_talking_software/development/talking_tap_twice/TTT.html#readDisplay()">readDisplay</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Speaks the contents of the display</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../android_talking_software/development/talking_tap_twice/TTT.html#removePronounciationDictionaryEntry(java.lang.String)">removePronounciationDictionaryEntry</A></B>(<A HREF="file:/C:/Program Files/android-sdk_r06-windows/docs/reference/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;phrase)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Removes an entry from the pronounciation dictionary.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../android_talking_software/development/talking_tap_twice/TTT.html#resetSelected(android_talking_software.development.talking_tap_twice.accessible_view_extensions.AccessibleViewExtension)">resetSelected</A></B>(<A HREF="../../../android_talking_software/development/talking_tap_twice/accessible_view_extensions/AccessibleViewExtension.html" title="interface in android_talking_software.development.talking_tap_twice.accessible_view_extensions">AccessibleViewExtension</A>&nbsp;v)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Same as setSelected except does not require a second tap to become valid.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../android_talking_software/development/talking_tap_twice/TTT.html#selectDisplay()">selectDisplay</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Allows the subclass to select the display.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../android_talking_software/development/talking_tap_twice/TTT.html#setContentView(int)">setContentView</A></B>(int&nbsp;layoutResID)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../android_talking_software/development/talking_tap_twice/TTT.html#setSelected(android_talking_software.development.talking_tap_twice.accessible_view_extensions.AccessibleViewExtension)">setSelected</A></B>(<A HREF="../../../android_talking_software/development/talking_tap_twice/accessible_view_extensions/AccessibleViewExtension.html" title="interface in android_talking_software.development.talking_tap_twice.accessible_view_extensions">AccessibleViewExtension</A>&nbsp;v)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sets the currently selected View</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../android_talking_software/development/talking_tap_twice/TTT.html#setUsingMathematicalPronounciations(boolean)">setUsingMathematicalPronounciations</A></B>(boolean&nbsp;usingMathematicalPronounciations)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Determines whether or not the TextToSpeech engine speaks the names of mathematical symbols that are normally punctuation marks.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../android_talking_software/development/talking_tap_twice/TTT.html#speak(java.lang.String)">speak</A></B>(<A HREF="file:/C:/Program Files/android-sdk_r06-windows/docs/reference/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;speak)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Simplifies the process of passing a phrase to the TextToSpeech engine.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>&nbsp;<A HREF="file:/C:/Program Files/android-sdk_r06-windows/docs/reference/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A></CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../android_talking_software/development/talking_tap_twice/TTT.html#spell(java.lang.String)">spell</A></B>(<A HREF="file:/C:/Program Files/android-sdk_r06-windows/docs/reference/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;text)</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Inserts spaces into the given String so that passing the String into the TextToSpeech engine will spell the String.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../android_talking_software/development/talking_tap_twice/TTT.html#spellDisplay()">spellDisplay</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Allows the subclass to spell the contents of the display.</TD>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD ALIGN="right" VALIGN="top" WIDTH="1%"><FONT SIZE="-1">
<CODE>protected &nbsp;void</CODE></FONT></TD>
<TD><CODE><B><A HREF="../../../android_talking_software/development/talking_tap_twice/TTT.html#tapDisplay()">tapDisplay</A></B>()</CODE>

<BR>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Allows the subclass to easily tap the display.</TD>
</TR>
</TABLE>
&nbsp;<A NAME="methods_inherited_from_class_java.lang.Object"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#EEEEFF" CLASS="TableSubHeadingColor">
<TH ALIGN="left"><B>Methods inherited from class java.lang.<A HREF="file:/C:/Program Files/android-sdk_r06-windows/docs/reference/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A></B></TH>
</TR>
<TR BGCOLOR="white" CLASS="TableRowColor">
<TD><CODE><A HREF="file:/C:/Program Files/android-sdk_r06-windows/docs/reference/java/lang/Object.html?is-external=true#clone()" title="class or interface in java.lang">clone</A>, <A HREF="file:/C:/Program Files/android-sdk_r06-windows/docs/reference/java/lang/Object.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang">equals</A>, <A HREF="file:/C:/Program Files/android-sdk_r06-windows/docs/reference/java/lang/Object.html?is-external=true#finalize()" title="class or interface in java.lang">finalize</A>, <A HREF="file:/C:/Program Files/android-sdk_r06-windows/docs/reference/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang">getClass</A>, <A HREF="file:/C:/Program Files/android-sdk_r06-windows/docs/reference/java/lang/Object.html?is-external=true#hashCode()" title="class or interface in java.lang">hashCode</A>, <A HREF="file:/C:/Program Files/android-sdk_r06-windows/docs/reference/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang">notify</A>, <A HREF="file:/C:/Program Files/android-sdk_r06-windows/docs/reference/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang">notifyAll</A>, <A HREF="file:/C:/Program Files/android-sdk_r06-windows/docs/reference/java/lang/Object.html?is-external=true#toString()" title="class or interface in java.lang">toString</A>, <A HREF="file:/C:/Program Files/android-sdk_r06-windows/docs/reference/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang">wait</A>, <A HREF="file:/C:/Program Files/android-sdk_r06-windows/docs/reference/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang">wait</A>, <A HREF="file:/C:/Program Files/android-sdk_r06-windows/docs/reference/java/lang/Object.html?is-external=true#wait(long, int)" title="class or interface in java.lang">wait</A></CODE></TD>
</TR>
</TABLE>
&nbsp;
<P>

<!-- ============ FIELD DETAIL =========== -->

<A NAME="field_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Field Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="display"><!-- --></A><H3>
display</H3>
<PRE>
protected <A HREF="../../../android_talking_software/development/talking_tap_twice/accessible_view_extensions/TextViewTTT.html" title="class in android_talking_software.development.talking_tap_twice.accessible_view_extensions">TextViewTTT</A> <B>display</B></PRE>
<DL>
<DD></br>Treated as the optional main display of the application.
<P>
<DL>
</DL>
</DL>
<HR>

<A NAME="invokeFrom"><!-- --></A><H3>
invokeFrom</H3>
<PRE>
protected <A HREF="file:/C:/Program Files/android-sdk_r06-windows/docs/reference/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</A> <B>invokeFrom</B></PRE>
<DL>
<DD></br>Acts as the target for invoking methods.
 
 It points to the running instance of the Activity subclass. 
 Unlike the other parameters that are initialized through information in the xml, this parameter must be initialized manually by the programmer.
<P>
<DL>
</DL>
</DL>

<!-- ========= CONSTRUCTOR DETAIL ======== -->

<A NAME="constructor_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Constructor Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="TTT()"><!-- --></A><H3>
TTT</H3>
<PRE>
public <B>TTT</B>()</PRE>
<DL>
</DL>

<!-- ============ METHOD DETAIL ========== -->

<A NAME="method_detail"><!-- --></A>
<TABLE BORDER="1" WIDTH="100%" CELLPADDING="3" CELLSPACING="0" SUMMARY="">
<TR BGCOLOR="#CCCCFF" CLASS="TableHeadingColor">
<TH ALIGN="left" COLSPAN="1"><FONT SIZE="+2">
<B>Method Detail</B></FONT></TH>
</TR>
</TABLE>

<A NAME="onCreate(Bundle)"><!-- --></A><H3>
onCreate</H3>
<PRE>
public void <B>onCreate</B>(Bundle&nbsp;savedInstanceState)</PRE>
<DL>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>See Also:</B><DD><A HREF="file:/C:/Program Files/android-sdk_r06-windows/docs/reference/android/app/Activity.html?is-external=true#onCreate(android.os.Bundle)" title="class or interface in android.app"><CODE>Activity</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setContentView(int)"><!-- --></A><H3>
setContentView</H3>
<PRE>
public void <B>setContentView</B>(int&nbsp;layoutResID)</PRE>
<DL>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="onDestroy()"><!-- --></A><H3>
onDestroy</H3>
<PRE>
protected void <B>onDestroy</B>()</PRE>
<DL>
<DD>This method is overridden to allow the addition of a spoken "Good-bye" message as well as the destruction of the TextToSpeech engine.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>See Also:</B><DD><A HREF="file:/C:/Program Files/android-sdk_r06-windows/docs/reference/android/app/Activity.html?is-external=true#onDestroy()" title="class or interface in android.app"><CODE>Activity</CODE></A></DL>
</DD>
</DL>
<HR>

<A NAME="setSelected(android_talking_software.development.talking_tap_twice.accessible_view_extensions.AccessibleViewExtension)"><!-- --></A><H3>
setSelected</H3>
<PRE>
protected void <B>setSelected</B>(<A HREF="../../../android_talking_software/development/talking_tap_twice/accessible_view_extensions/AccessibleViewExtension.html" title="interface in android_talking_software.development.talking_tap_twice.accessible_view_extensions">AccessibleViewExtension</A>&nbsp;v)</PRE>
<DL>
<DD>Sets the currently selected View
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>v</CODE> - the new View that is selected</DL>
</DD>
</DL>
<HR>

<A NAME="speak(java.lang.String)"><!-- --></A><H3>
speak</H3>
<PRE>
protected void <B>speak</B>(<A HREF="file:/C:/Program Files/android-sdk_r06-windows/docs/reference/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;speak)</PRE>
<DL>
<DD>Simplifies the process of passing a phrase to the TextToSpeech engine.
 
 This method is meant only to provide access to functionality and should not be overridden.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>speak</CODE> - the phrase to be spoken</DL>
</DD>
</DL>
<HR>

<A NAME="convert(java.lang.CharSequence)"><!-- --></A><H3>
convert</H3>
<PRE>
public <A HREF="file:/C:/Program Files/android-sdk_r06-windows/docs/reference/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A> <B>convert</B>(<A HREF="file:/C:/Program Files/android-sdk_r06-windows/docs/reference/java/lang/CharSequence.html?is-external=true" title="class or interface in java.lang">CharSequence</A>&nbsp;text)</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../android_talking_software/development/talking_tap_twice/Event/TouchListener.html#convert(java.lang.CharSequence)">TouchListener</A></CODE></B></DD>
<DD>Performs any replacements in a phrase so that a TextToSpeech object will speak it as desired.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../android_talking_software/development/talking_tap_twice/Event/TouchListener.html#convert(java.lang.CharSequence)">convert</A></CODE> in interface <CODE><A HREF="../../../android_talking_software/development/talking_tap_twice/Event/TouchListener.html" title="interface in android_talking_software.development.talking_tap_twice.Event">TouchListener</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>text</CODE> - The phrase to be converted.
<DT><B>Returns:</B><DD></DL>
</DD>
</DL>
<HR>

<A NAME="expandTextViewContents(java.lang.CharSequence)"><!-- --></A><H3>
expandTextViewContents</H3>
<PRE>
public <A HREF="file:/C:/Program Files/android-sdk_r06-windows/docs/reference/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A> <B>expandTextViewContents</B>(<A HREF="file:/C:/Program Files/android-sdk_r06-windows/docs/reference/java/lang/CharSequence.html?is-external=true" title="class or interface in java.lang">CharSequence</A>&nbsp;text)</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../android_talking_software/development/talking_tap_twice/Event/TouchListener.html#expandTextViewContents(java.lang.CharSequence)">TouchListener</A></CODE></B></DD>
<DD>Returns a String of text that a TextToSpeech will read out letter by letter.

 One possible implementation for this method is to insert spaces between the individual letters.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../android_talking_software/development/talking_tap_twice/Event/TouchListener.html#expandTextViewContents(java.lang.CharSequence)">expandTextViewContents</A></CODE> in interface <CODE><A HREF="../../../android_talking_software/development/talking_tap_twice/Event/TouchListener.html" title="interface in android_talking_software.development.talking_tap_twice.Event">TouchListener</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>text</CODE> - The phrase to be spelled.
<DT><B>Returns:</B><DD>The converted phrase.</DL>
</DD>
</DL>
<HR>

<A NAME="spell(java.lang.String)"><!-- --></A><H3>
spell</H3>
<PRE>
public <A HREF="file:/C:/Program Files/android-sdk_r06-windows/docs/reference/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A> <B>spell</B>(<A HREF="file:/C:/Program Files/android-sdk_r06-windows/docs/reference/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;text)</PRE>
<DL>
<DD>Inserts spaces into the given String so that passing the String into the TextToSpeech engine will spell the String.
 
 This method is meant only to provide access to functionality and should not be overridden.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>text</CODE> - the String into which to insert spaces
<DT><B>Returns:</B><DD>the new String with spaces</DL>
</DD>
</DL>
<HR>

<A NAME="resetSelected(android_talking_software.development.talking_tap_twice.accessible_view_extensions.AccessibleViewExtension)"><!-- --></A><H3>
resetSelected</H3>
<PRE>
protected void <B>resetSelected</B>(<A HREF="../../../android_talking_software/development/talking_tap_twice/accessible_view_extensions/AccessibleViewExtension.html" title="interface in android_talking_software.development.talking_tap_twice.accessible_view_extensions">AccessibleViewExtension</A>&nbsp;v)</PRE>
<DL>
<DD>Same as setSelected except does not require a second tap to become valid.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>the</CODE> - new View that is selected</DL>
</DD>
</DL>
<HR>

<A NAME="getSelected()"><!-- --></A><H3>
getSelected</H3>
<PRE>
protected <A HREF="../../../android_talking_software/development/talking_tap_twice/accessible_view_extensions/AccessibleViewExtension.html" title="interface in android_talking_software.development.talking_tap_twice.accessible_view_extensions">AccessibleViewExtension</A> <B>getSelected</B>()</PRE>
<DL>
<DD>Returns the currently selected View
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the currently selected View</DL>
</DD>
</DL>
<HR>

<A NAME="getDefaultMethod()"><!-- --></A><H3>
getDefaultMethod</H3>
<PRE>
protected <A HREF="file:/C:/Program Files/android-sdk_r06-windows/docs/reference/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A> <B>getDefaultMethod</B>()</PRE>
<DL>
<DD>Returns the name of the default method to be invoked when a control is selected.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the name of the default method to be invoked when a control is selected</DL>
</DD>
</DL>
<HR>

<A NAME="getDefaultSelected()"><!-- --></A><H3>
getDefaultSelected</H3>
<PRE>
protected <A HREF="file:/C:/Program Files/android-sdk_r06-windows/docs/reference/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A> <B>getDefaultSelected</B>()</PRE>
<DL>
<DD>Returns the default phrase to be spoken when a control is selected.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>the default phrase to be spoken when a control is selected</DL>
</DD>
</DL>
<HR>

<A NAME="isUsingMathematicalPronounciations()"><!-- --></A><H3>
isUsingMathematicalPronounciations</H3>
<PRE>
protected boolean <B>isUsingMathematicalPronounciations</B>()</PRE>
<DL>
<DD>Returns a boolean indicating whether or not the TextToSpeech engine speaks the names of mathematical symbols that are normally punctuation marks.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="setUsingMathematicalPronounciations(boolean)"><!-- --></A><H3>
setUsingMathematicalPronounciations</H3>
<PRE>
protected void <B>setUsingMathematicalPronounciations</B>(boolean&nbsp;usingMathematicalPronounciations)</PRE>
<DL>
<DD>Determines whether or not the TextToSpeech engine speaks the names of mathematical symbols that are normally punctuation marks.

 These symbols are:
 <list>
 <li> -: mminus</li>
 <li>*: times</li>
 <li>/: divided by</li>
 <li>^: to the power of</li>
 </list>
 These symbols are not stored in the pronounciation dictionary. Overriding them by adding entries for them will always result in the dictionary entry having priority over the original value, regardless of whether this feature is turned on or off.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="addPronounciationDictionaryEntry(java.lang.String, java.lang.String)"><!-- --></A><H3>
addPronounciationDictionaryEntry</H3>
<PRE>
protected void <B>addPronounciationDictionaryEntry</B>(<A HREF="file:/C:/Program Files/android-sdk_r06-windows/docs/reference/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;phrase,
                                                <A HREF="file:/C:/Program Files/android-sdk_r06-windows/docs/reference/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;pronounciation)</PRE>
<DL>
<DD>Adds an entry to the pronounciation dictionary
 
 If the pronounciation dictionary already contains a pronounciation for the phrase, the current value is overridden without warning or confirmation.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>phrase</CODE> - the original phrase to be pronounced differently<DD><CODE>pronounciation</CODE> - a phrase that will be pronounced in the desired way</DL>
</DD>
</DL>
<HR>

<A NAME="removePronounciationDictionaryEntry(java.lang.String)"><!-- --></A><H3>
removePronounciationDictionaryEntry</H3>
<PRE>
protected void <B>removePronounciationDictionaryEntry</B>(<A HREF="file:/C:/Program Files/android-sdk_r06-windows/docs/reference/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;phrase)</PRE>
<DL>
<DD>Removes an entry from the pronounciation dictionary.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>phrase</CODE> - phrase to be removed</DL>
</DD>
</DL>
<HR>

<A NAME="hasPhraseInPronounciationDictionary(java.lang.String)"><!-- --></A><H3>
hasPhraseInPronounciationDictionary</H3>
<PRE>
protected boolean <B>hasPhraseInPronounciationDictionary</B>(<A HREF="file:/C:/Program Files/android-sdk_r06-windows/docs/reference/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;phrase)</PRE>
<DL>
<DD>Returns a boolean indicating whether or not the given phrase is in the pronounciation dictiionary.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="getPronounciationForPhrase(java.lang.String)"><!-- --></A><H3>
getPronounciationForPhrase</H3>
<PRE>
protected <A HREF="file:/C:/Program Files/android-sdk_r06-windows/docs/reference/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A> <B>getPronounciationForPhrase</B>(<A HREF="file:/C:/Program Files/android-sdk_r06-windows/docs/reference/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</A>&nbsp;phrase)</PRE>
<DL>
<DD>Returns the pronounciation that is stored in the pronounciation dectionary for the given phrase.

 If there is not an entry in the pronounciation dictionary for the given phrase, the original phrase is returned. However, this may not be what the TextToSpeech engine actually speaks. Rather, it is what is passed into the TextToSpeech engine. Programmers using words not found in the English dictionary, unusal names or symbols should experiment on their own with speech output of such inputs.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>phrase</CODE> - phrase for which the pronounciation is desired
<DT><B>Returns:</B><DD>the pronounciation associated with the phrase</DL>
</DD>
</DL>
<HR>

<A NAME="processSelection(android_talking_software.development.talking_tap_twice.Event.TouchEvent)"><!-- --></A><H3>
processSelection</H3>
<PRE>
public void <B>processSelection</B>(<A HREF="../../../android_talking_software/development/talking_tap_twice/Event/TouchEvent.html" title="class in android_talking_software.development.talking_tap_twice.Event">TouchEvent</A>&nbsp;e)</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../android_talking_software/development/talking_tap_twice/Event/TouchListener.html#processSelection(android_talking_software.development.talking_tap_twice.Event.TouchEvent)">TouchListener</A></CODE></B></DD>
<DD>Notifies the TouchListener that an AccessibleViewExtension has had its performSelection method invoked.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../android_talking_software/development/talking_tap_twice/Event/TouchListener.html#processSelection(android_talking_software.development.talking_tap_twice.Event.TouchEvent)">processSelection</A></CODE> in interface <CODE><A HREF="../../../android_talking_software/development/talking_tap_twice/Event/TouchListener.html" title="interface in android_talking_software.development.talking_tap_twice.Event">TouchListener</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>e</CODE> - A TouchEvent that contains the phrase for the TouchListener to speak and the method, if any, for the TouchListener to invoke.</DL>
</DD>
</DL>
<HR>

<A NAME="processEntry()"><!-- --></A><H3>
processEntry</H3>
<PRE>
public void <B>processEntry</B>()</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../android_talking_software/development/talking_tap_twice/Event/TouchListener.html#processEntry()">TouchListener</A></CODE></B></DD>
<DD>Notifies the TouchListener that an AccessibleViewExtension has been double tapped and that the TouchListener is to invoke the performSelection method of the AccessibleViewExtension that it has stored as selected.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../android_talking_software/development/talking_tap_twice/Event/TouchListener.html#processEntry()">processEntry</A></CODE> in interface <CODE><A HREF="../../../android_talking_software/development/talking_tap_twice/Event/TouchListener.html" title="interface in android_talking_software.development.talking_tap_twice.Event">TouchListener</A></CODE></DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="processTap(android_talking_software.development.talking_tap_twice.Event.TouchEvent)"><!-- --></A><H3>
processTap</H3>
<PRE>
public void <B>processTap</B>(<A HREF="../../../android_talking_software/development/talking_tap_twice/Event/TouchEvent.html" title="class in android_talking_software.development.talking_tap_twice.Event">TouchEvent</A>&nbsp;e)</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../android_talking_software/development/talking_tap_twice/Event/TouchListener.html#processTap(android_talking_software.development.talking_tap_twice.Event.TouchEvent)">TouchListener</A></CODE></B></DD>
<DD>Notifies the TouchListener that an AccessibleViewExtension has been tapped.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../android_talking_software/development/talking_tap_twice/Event/TouchListener.html#processTap(android_talking_software.development.talking_tap_twice.Event.TouchEvent)">processTap</A></CODE> in interface <CODE><A HREF="../../../android_talking_software/development/talking_tap_twice/Event/TouchListener.html" title="interface in android_talking_software.development.talking_tap_twice.Event">TouchListener</A></CODE></DL>
</DD>
<DD><DL>
<DT><B>Parameters:</B><DD><CODE>e</CODE> - A TouchEvent that contains the phrase for the TouchListener to speak.</DL>
</DD>
</DL>
<HR>

<A NAME="isSearching()"><!-- --></A><H3>
isSearching</H3>
<PRE>
public boolean <B>isSearching</B>()</PRE>
<DL>
<DD><B>Description copied from interface: <CODE><A HREF="../../../android_talking_software/development/talking_tap_twice/Event/TouchListener.html#isSearching()">TouchListener</A></CODE></B></DD>
<DD>Indicates if the user is still searching for the correct control based on the time interval sense the last touch.
<P>
<DD><DL>
<DT><B>Specified by:</B><DD><CODE><A HREF="../../../android_talking_software/development/talking_tap_twice/Event/TouchListener.html#isSearching()">isSearching</A></CODE> in interface <CODE><A HREF="../../../android_talking_software/development/talking_tap_twice/Event/TouchListener.html" title="interface in android_talking_software.development.talking_tap_twice.Event">TouchListener</A></CODE></DL>
</DD>
<DD><DL>

<DT><B>Returns:</B><DD>If the user is still searching for the correct control based on the time interval sense the last touch.</DL>
</DD>
</DL>
<HR>

<A NAME="readDisplay()"><!-- --></A><H3>
readDisplay</H3>
<PRE>
protected void <B>readDisplay</B>()</PRE>
<DL>
<DD>Speaks the contents of the display
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="tapDisplay()"><!-- --></A><H3>
tapDisplay</H3>
<PRE>
protected void <B>tapDisplay</B>()</PRE>
<DL>
<DD>Allows the subclass to easily tap the display. The default action is to read the display.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="selectDisplay()"><!-- --></A><H3>
selectDisplay</H3>
<PRE>
protected void <B>selectDisplay</B>()</PRE>
<DL>
<DD>Allows the subclass to select the display. The default action is to spell out the contents of the display.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<HR>

<A NAME="spellDisplay()"><!-- --></A><H3>
spellDisplay</H3>
<PRE>
protected void <B>spellDisplay</B>()</PRE>
<DL>
<DD>Allows the subclass to spell the contents of the display.
<P>
<DD><DL>
</DL>
</DD>
<DD><DL>
</DL>
</DD>
</DL>
<!-- ========= END OF CLASS DATA ========= -->
<HR>


<!-- ======= START OF BOTTOM NAVBAR ====== -->
<A NAME="navbar_bottom"><!-- --></A>
<A HREF="#skip-navbar_bottom" title="Skip navigation links"></A>
<TABLE BORDER="0" WIDTH="100%" CELLPADDING="1" CELLSPACING="0" SUMMARY="">
<TR>
<TD COLSPAN=2 BGCOLOR="#EEEEFF" CLASS="NavBarCell1">
<A NAME="navbar_bottom_firstrow"><!-- --></A>
<TABLE BORDER="0" CELLPADDING="0" CELLSPACING="3" SUMMARY="">
  <TR ALIGN="center" VALIGN="top">
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../overview-summary.html"><FONT CLASS="NavBarFont1"><B>Overview</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-summary.html"><FONT CLASS="NavBarFont1"><B>Package</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#FFFFFF" CLASS="NavBarCell1Rev"> &nbsp;<FONT CLASS="NavBarFont1Rev"><B>Class</B></FONT>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="class-use/TTT.html"><FONT CLASS="NavBarFont1"><B>Use</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="package-tree.html"><FONT CLASS="NavBarFont1"><B>Tree</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../deprecated-list.html"><FONT CLASS="NavBarFont1"><B>Deprecated</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../index-files/index-1.html"><FONT CLASS="NavBarFont1"><B>Index</B></FONT></A>&nbsp;</TD>
  <TD BGCOLOR="#EEEEFF" CLASS="NavBarCell1">    <A HREF="../../../help-doc.html"><FONT CLASS="NavBarFont1"><B>Help</B></FONT></A>&nbsp;</TD>
  </TR>
</TABLE>
</TD>
<TD ALIGN="right" VALIGN="top" ROWSPAN=3><EM>
</EM>
</TD>
</TR>

<TR>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
&nbsp;<A HREF="../../../android_talking_software/development/talking_tap_twice/R.styleable.html" title="class in android_talking_software.development.talking_tap_twice"><B>PREV CLASS</B></A>&nbsp;
&nbsp;NEXT CLASS</FONT></TD>
<TD BGCOLOR="white" CLASS="NavBarCell2"><FONT SIZE="-2">
  <A HREF="../../../index.html?android_talking_software/development/talking_tap_twice/TTT.html" target="_top"><B>FRAMES</B></A>  &nbsp;
&nbsp;<A HREF="TTT.html" target="_top"><B>NO FRAMES</B></A>  &nbsp;
&nbsp;<SCRIPT type="text/javascript">
  <!--
  if(window==top) {
    document.writeln('<A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>');
  }
  //-->
</SCRIPT>
<NOSCRIPT>
  <A HREF="../../../allclasses-noframe.html"><B>All Classes</B></A>
</NOSCRIPT>


</FONT></TD>
</TR>
<TR>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
  SUMMARY:&nbsp;NESTED&nbsp;|&nbsp;<A HREF="#field_summary">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_summary">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_summary">METHOD</A></FONT></TD>
<TD VALIGN="top" CLASS="NavBarCell3"><FONT SIZE="-2">
DETAIL:&nbsp;<A HREF="#field_detail">FIELD</A>&nbsp;|&nbsp;<A HREF="#constructor_detail">CONSTR</A>&nbsp;|&nbsp;<A HREF="#method_detail">METHOD</A></FONT></TD>
</TR>
</TABLE>
<A NAME="skip-navbar_bottom"></A>
<!-- ======== END OF BOTTOM NAVBAR ======= -->

<HR>

</BODY>
</HTML>
